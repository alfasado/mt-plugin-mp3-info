name: MP3Info
id  : MP3Info
key:  mp3info
description: <__trans phrase="Print information of MP3.">
version: 0.4
author_link: http://alfasado.net/
author_name: Alfasado Inc.
l10n_class: MP3Info::L10N
tags:
    function:
        MP3Info: >
                sub {
                    use MP3::Info;
                    my ( $ctx, $args ) = @_;
                    my $target = $args->{ target } || 'SECS';
                    $target = uc( $target );
                    my $asset = $ctx->stash( 'asset' )
                        or return $ctx->_no_asset_error();
                    if ( $asset->file_ext ne 'mp3' ) {
                        return '';
                    }
                    if ( my $info = get_mp3info( $asset->file_path ) ) {
                        if ( $target eq 'DUMP' ) {
                            use Data::Dumper;
                            return Dumper $info;
                        }
                        if ( $target eq 'HMS' ) {
                            my $hh = 0;
                            my $mm = $info->{ MM } || '';
                            if ( $mm > 59 ) {
                                $hh = int( $mm / 60 );
                                $mm = int( $mm % 60 );
                            }
                            my $ss = $info->{ SS } || '';
                            my $sprintf = $args->{ format } || '%02d:%02d:%02d';
                            return sprintf( $sprintf, $hh, $mm, $ss );
                        } elsif ( $target eq 'MS' ) {
                            my $secs = int( $info->{ SECS } );
                            my $m = int( $secs / 60 );
                            my $s = int( $secs % 60 );
                            my $sprintf = $args->{ format } || '%02d:%02d';
                            return sprintf( $sprintf, $m, $s );
                        } elsif ( $target eq 'M' ) {
                            my $secs = int( $info->{ SECS } );
                            my $m = int( $secs / 60 );
                            if ( $args->{ round } ) {
                                $m++ if int( $secs % 60 ) >= 30;
                            }
                            my $sprintf = $args->{ format } || '%d';
                            return sprintf( $sprintf, $m );
                        }
                        my $value = $info->{ $target };
                        if ( my $sprintf = $args->{ format } ) {
                            return sprintf( $sprintf, $value );
                        }
                        return $value;
                    }
                }
        MP3Tag: >
                sub {
                    use MP3::Info;
                    my ( $ctx, $args ) = @_;
                    my $target = $args->{ target } || 'TITLE';
                    $target = uc( $target );
                    my $asset = $ctx->stash( 'asset' )
                        or return $ctx->_no_asset_error();
                    if ( $asset->file_ext ne 'mp3' ) {
                        return '';
                    }
                    if ( my $info = get_mp3tag( $asset->file_path ) ) {
                        if ( $target eq 'DUMP' ) {
                            use Data::Dumper;
                            return Dumper $info;
                        }
                        return $info->{ $target };
                    }
                }
